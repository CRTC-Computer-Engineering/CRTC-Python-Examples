from PIL import Image
import numpy as np

selected_image = Image.open('image.png')
pix = selected_image.load()
width, height = selected_image.size
output_file = open("output.py", "a")
output_file.write("image_list = [")
resolution = int(input("Set your res (default is 2): "))

list_of_colors = [[0,0,0],[0,0,255],[150,75,0],[0,255,255],[255,215,0],[128,128,128],[0,255,0],[75,0,130],[255,165,0],[251,96,127],[160,32,240],[255,0,0],[143,0,255],[255,255,255],[250,255,0]]
list_of_names = ["black", "blue",   "brown",   "cyan",     "gold",     "gray",       "green",  "indigo",  "orange",   "pink",      "purple",    "red",    "violet",   "white",      "yellow"]

def closest(colors,color):
    colors = np.array(colors) # all the colors are now an array
    color = np.array(color) # the current color is another array
    distances = np.sqrt(np.sum((colors-color)**2,axis=1)) # get all the distances 
    index_of_smallest = np.where(distances==np.amin(distances)) # find the array with the smallest distance
    smallest_distance = colors[index_of_smallest] # Get that distance
    return smallest_distance #return the closest color

for row in range(0, height, resolution):
    for column in range(0, width, resolution):
        try:
            red, green, blue, alpha = pix[column, row]
        except:
            red, green, blue = pix[column, row]
        #print (str(red) + " " + str(green) + " " + str(blue))
        
        #print([red, green, blue])
        closest_color = ((closest(list_of_colors, [red,green,blue])).tolist())[0]
        #print(closest_color)
        
        index_in_array = 0
        for i in list_of_colors:
            #print(i)
            if i == closest_color:
                output_color = list_of_names[index_in_array]
            index_in_array = index_in_array + 1
            
        print(output_color)
        if(output_color != "white"):
            output_file.write("\"" + str(column) + " " + str(row) + " " + output_color + "\", ")
output_file.write("""]

# This code autogenerated by joe
speed(0)
resolution = """ + str(resolution) + """
for current_pixel in image_list:
    split_pixel = current_pixel.split()
    x = split_pixel[0]
    y = 400 - int(split_pixel[1])
    selectColor = split_pixel[2]
    
    penup()
    setposition(int(x) - 200, int(y) - 200)
    pendown()
    color(selectColor)
    pensize(resolution * 2)
    forward(resolution)
print("Done")""")